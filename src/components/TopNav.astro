---
import { sanityClient } from "sanity:client";
import imageUrlBuilder from "@sanity/image-url";

export type props = {
  title: string;
};
const categories = await sanityClient.fetch(`*[_type == "category"]{
        _id,
        title,
        slug,
        "instruments": *[_type == "instrument" && references(^._id)]{
          _id,
          title,
          slug,
        }
      }`);
---

<section class="nav-section">
  <nav class="relative mx-8 flex justify-between items-center bg-white">
    <a class="text-2xl font-light leading-none" href="/">
      Main Street Percussion
    </a>
    <div class="lg:hidden">
      <button class="navbar-burger flex items-center text-gray-600 p-3">
        <svg
          class="block h-4 w-4 fill-current"
          viewBox="0 0 20 20"
          xmlns="http://www.w3.org/2000/svg"
        >
          <title>Mobile menu</title>
          <path d="M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z"></path>
        </svg>
      </button>
    </div>
    <ul class="hidden lg:flex lg:items-center lg:w-auto lg:space-x-6">
      <li>
        <a class="text-lg text-gray-800 hover:text-gray-500" href="/">Home</a>
      </li>
      <li class="nav-item dropdown">
        <a
          class="text-lg text-gray-800 hover:text-gray-500 dropdown-toggle"
          href="/categories">Categories</a
        >
        <ul class="dropdown-menu">
          {
            categories.map((c: { title: string; slug: any; imageUrl: any }) => {
              return (
                <li class="hover:text-gray-500">
                  <a href={`/category/${c.slug.current}`}>{c.title}</a>
                </li>
              );
            })
          }
        </ul>
      </li>
      <li>
        <a
          class="nav-item text-lg text-gray-800 hover:text-gray-500"
          href="/contact">Contact</a
        >
      </li>
    </ul>
  </nav>
  <div
    class="hidden navbar-menu fixed top-0 left-0 bottom-0 w-5/6 max-w-sm z-50"
  >
    <div class="navbar-backdrop fixed inset-0 bg-gray-800 opacity-25"></div>
    <nav
      class="relative flex flex-col py-6 px-6 h-full w-full bg-white border-r overflow-y-auto"
    >
      <div class="flex items-center mb-8">
        <a class="mr-auto text-2xl font-light leading-none" href="/">
          Main Street Percussion
        </a>
        <button class="navbar-close">
          <svg
            class="h-6 w-6 text-gray-400 cursor-pointer hover:text-gray-500"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      <div>
        <ul>
          <li class="mb-1">
            <a
              class="block p-4 text-lg font-semibold text-gray-400 hover:bg-green-50 hover:text-green-600 rounded"
              href="/">Home</a
            >
          </li>
          <li class="mb-1">
            <a
              class="block p-4 text-lg font-semibold text-gray-400 hover:bg-green-50 hover:text-green-600 rounded"
              href="/categories">Categories</a
            >
          </li>
          <li class="mb-1">
            <a
              class="block p-4 text-lg font-semibold text-gray-400 hover:bg-green-50 hover:text-green-600 rounded"
              href="/contact">Contact</a
            >
          </li>
        </ul>
      </div>
    </nav>
  </div>
</section>

<script>
  // write your code here
  document.addEventListener("DOMContentLoaded", () => {
    const burger = document.querySelector<HTMLButtonElement>(".navbar-burger");
    const menu = document.querySelector<HTMLDivElement>(".navbar-menu");
    const backdrop = document.querySelector<HTMLDivElement>(".navbar-backdrop");
    const closeBtn = document.querySelector<HTMLButtonElement>(".navbar-close");

    function toggleMenu(): void {
      menu?.classList.toggle("hidden");
    }

    burger?.addEventListener("click", toggleMenu);
    backdrop?.addEventListener("click", toggleMenu);
    closeBtn?.addEventListener("click", toggleMenu);
  });
</script>

<style>
  .nav-item {
    height: 6rem;
    position: relative;
  }

  .dropdown {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .dropdown-menu {
    display: none;
    position: absolute;
    top: 100%;
    right: 0;
  }

  .dropdown-menu > li a {
    display: block;
    background-color: white;
    padding: 0.5rem 1rem;
    min-width: 16rem;
  }

  .dropdown:hover .dropdown-menu {
    display: inline-block;
  }
</style>
